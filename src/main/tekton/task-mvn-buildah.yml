apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: mvn-buildah
spec:
  inputs:
    resources:
      - name: source
        type: git
    params:
      - name: contextDir
        description: the context dir within source
        default: .
      - name: mavenMirrorUrl
        description: the maven mirror url
        default: http://repo1.maven.apache.org/maven2
      - name: destinationImage
        description: Parameter Description
        default: "$(outputs.resources.builtImage.url)"
      - name: dockerFile
        description: Parameter Description
        default: Dockerfile
      - name: tlsVerify
        description: tls verify
        type: string
        default: "false"
  outputs:
    resources:
      - name: builtImage
        type: image
  steps:
    - name: ls-build-sources
      image: fedora
      command: ["ls", "/workspace/source"]
    - name: echo-dockerfile
      image: fedora
      command: ["echo", "$(inputs.params.dockerFile)"]
    - name: cat-dockerfile
      image: fedora
      command: ["cat", "/workspace/source/$(inputs.params.dockerFile)"]
    - name: echo-destinationimage
      image: fedora
      command: ["echo", "$(inputs.params.destinationImage)"]
    - name: build-sources
      image: quay.io/quarkus/
      workingDir: "/workspace/source/$(inputs.params.contextDir)"
      command:
        - mvn
      args:
        - clean
        - package
        - -DskipTests
      env:
        - name: MAVEN_MIRROR_URL
          value: "$(inputs.params.mavenMirrorUrl)"
    - name: ls-build-target
      image: fedora
      command: ["ls", "/workspace/source/target"]
    - name: build-image
      image: quay.io/buildah/stable
      workingDir: "/workspace/source/$(inputs.params.contextDir)"
      command:
        - "buildah"
      args:
        - "bud"
        - "--layers"
        - "-f"
        - "$(inputs.params.dockerFile)"
        - "-t"
        - "$(inputs.params.destinationImage)"
        - "."
      securityContext:
        privileged: true
        runAsUser: 0
      volumeMounts:
        - name: varlibc
          mountPath: /var/lib/containers
    - name: push-image
      image: quay.io/buildah/stable
      workingDir: "/workspace/source/$(inputs.params.contextDir)"
      command:
        - "buildah"
      args:
        - "push"
        - "--tls-verify=$(inputs.params.tlsVerify)"
        - $(inputs.params.destinationImage)
        - "docker://$(inputs.params.destinationImage)"
      securityContext:
        runAsUser: 0
        privileged: true
      volumeMounts:
        - name: varlibc
          mountPath: /var/lib/containers
  volumes:
    - name: varlibc
      emptyDir: {}
